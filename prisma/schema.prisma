generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Roles {
  Role_ID          Int       @id @default(autoincrement())
  Description      String    @db.VarChar(255)
  Created_Datetime DateTime  @default(now()) @db.Timestamp(6)
  Updated_Datetime DateTime? @db.Timestamp(6)
  Users            Users[]
}

model Status {
  Status_ID        Int              @id @default(autoincrement())
  Description      String           @db.VarChar(255)
  Created_Datetime DateTime         @default(now()) @db.Timestamp(6)
  Updated_Datetime DateTime?        @db.Timestamp(6)
  Is_Active        Boolean          @default(true)
  Purchase_Order   Purchase_Order[]
}

model Users {
  User_ID          Int          @id(map: "User_pkey") @default(autoincrement())
  First_Name       String       @db.VarChar(255)
  Last_Name        String       @db.VarChar(255)
  Email            String       @db.VarChar(255)
  Role_ID          Int
  Created_Datetime DateTime     @default(now()) @db.Timestamp(6)
  Updated_Datetime DateTime?    @db.Timestamp(6)
  Audit_Logs       Audit_Logs[]
  Roles            Roles        @relation(fields: [Role_ID], references: [Role_ID], onDelete: NoAction, onUpdate: NoAction, map: "Foreign Key Role_ID")
}

model Categories {
  Category_ID      Int       @id(map: "Category_pkey") @default(autoincrement())
  Description      String    @db.VarChar(225)
  Is_Active        Boolean   @default(true)
  Created_Datetime DateTime  @default(now()) @db.Timestamptz(6)
  Updated_Datetime DateTime? @db.Timestamp(6)
  Items            Items[]
}

model Contacts {
  Contact_ID       Int                @id(map: "Contact_pkey") @default(autoincrement())
  First_Name       String             @db.VarChar(225)
  Last_Name        String             @db.VarChar(225)
  Email            String             @db.VarChar(225)
  Phone            String?            @db.VarChar(50)
  Created_Datetime DateTime           @default(now()) @db.Timestamp(6)
  Updated_Datetime DateTime?          @db.Timestamp(6)
  Location_Contact Location_Contact[]
  Supplier_Contact Supplier_Contact[]
}

model Item_Location {
  Item_Location_ID Int       @id @default(autoincrement())
  Location_ID      Int
  Item_ID          Int
  Start_Date       DateTime? @db.Date
  End_Date         DateTime? @db.Date
  Created_Datetime DateTime  @default(now()) @db.Timestamp(6)
  Updated_Datetime DateTime? @db.Timestamp(6)
  Items            Items     @relation(fields: [Item_ID], references: [Item_ID], onDelete: NoAction, onUpdate: NoAction)
  Locations        Locations @relation(fields: [Location_ID], references: [Location_ID], onDelete: NoAction, onUpdate: NoAction)
}

model Items {
  Item_ID             Int                   @id(map: "Item_pkey") @default(autoincrement())
  Name                String                @db.VarChar(255)
  SKU                 String                @db.VarChar(50)
  Description         String?               @db.VarChar(255)
  Is_Active           Boolean               @default(true)
  Created_Datetime    DateTime              @default(now()) @db.Timestamp(6)
  Updated_Datetime    DateTime?             @db.Timestamp(6)
  Barcode             String?               @db.VarChar(255)
  Quantity            Int?
  Category_ID         Int
  Supplier_ID         Int?
  Item_Location       Item_Location[]
  Categories          Categories            @relation(fields: [Category_ID], references: [Category_ID], onDelete: NoAction, onUpdate: NoAction)
  Suppliers           Suppliers?            @relation(fields: [Supplier_ID], references: [Supplier_ID], onDelete: NoAction, onUpdate: NoAction)
  Purchase_Order_Item Purchase_Order_Item[]
  Stock_Alerts        Stock_Alerts[]
}

model Locations {
  Location_ID      Int                @id(map: "Location_pkey") @default(autoincrement())
  Description      String             @db.VarChar(255)
  Is_Active        Boolean            @default(true)
  Created_Datetime DateTime           @default(now()) @db.Timestamp(6)
  Updated_Datetime DateTime           @default(now()) @db.Timestamp(6)
  Max_Capacity     Int                @default(0)
  Min_Capacity     Int                @default(0)
  Street           String             @db.VarChar(225)
  City             String             @db.VarChar(225)
  State            String             @db.VarChar(225)
  Country          String             @db.VarChar(225)
  Zip_Code         Int
  Location_Type_ID Int
  Item_Location    Item_Location[]
  Location_Contact Location_Contact[]
  Location_Type    Location_Type      @relation(fields: [Location_Type_ID], references: [Location_Type_ID], onDelete: NoAction, onUpdate: NoAction)
}

model Purchase_Order {
  Purchase_Order_ID   Int                   @id @default(autoincrement())
  Supplier_ID         Int
  Status_ID           Int
  Created_Datetime    DateTime              @default(now()) @db.Timestamp(6)
  Updated_Datetime    DateTime?             @db.Timestamp(6)
  Status              Status                @relation(fields: [Status_ID], references: [Status_ID], onDelete: NoAction, onUpdate: NoAction)
  Suppliers           Suppliers             @relation(fields: [Supplier_ID], references: [Supplier_ID], onDelete: NoAction, onUpdate: NoAction)
  Purchase_Order_Item Purchase_Order_Item[]
}

model Purchase_Order_Item {
  Purchase_Order_Item_ID Int            @id @default(autoincrement())
  Purchase_Order_ID      Int
  Item_ID                Int
  Purchase_Price         Decimal        @default(0) @db.Decimal(11, 2)
  Created_Datetime       DateTime       @default(now()) @db.Timestamp(6)
  Updated_Datetime       DateTime?      @db.Timestamp(6)
  Items                  Items          @relation(fields: [Item_ID], references: [Item_ID], onDelete: NoAction, onUpdate: NoAction)
  Purchase_Order         Purchase_Order @relation(fields: [Purchase_Order_ID], references: [Purchase_Order_ID], onDelete: NoAction, onUpdate: NoAction)
}

model Supplier_Contact {
  Supplier_Contact_ID Int       @id @default(autoincrement())
  Supplier_ID         Int
  Contact_ID          Int
  Is_Active           Boolean   @default(true)
  Created_Datetime    DateTime  @default(now()) @db.Timestamp(6)
  Updated_Datetime    DateTime? @db.Timestamp(6)
  Contacts            Contacts  @relation(fields: [Contact_ID], references: [Contact_ID], onDelete: NoAction, onUpdate: NoAction)
  Suppliers           Suppliers @relation(fields: [Supplier_ID], references: [Supplier_ID], onDelete: NoAction, onUpdate: NoAction)
}

model Suppliers {
  Supplier_ID      Int                @id @default(autoincrement())
  Name             String             @db.VarChar(225)
  Street           String             @db.VarChar(225)
  City             String             @db.VarChar(225)
  State            String             @db.VarChar(225)
  Country          String             @db.VarChar(225)
  Created_Datetime DateTime           @default(now()) @db.Timestamp(6)
  Updated_Datetime DateTime?          @db.Timestamp(6)
  Zip_Code         Int
  Items            Items[]
  Purchase_Order   Purchase_Order[]
  Supplier_Contact Supplier_Contact[]
}

model Audit_Actions {
  Audit_Log_Actions_ID Int          @id(map: "Audit_Log_Actions_pkey") @default(autoincrement())
  Description          String       @db.VarChar(255)
  Created_Datetime     DateTime     @default(now()) @db.Timestamptz(6)
  Updated_Datetime     DateTime?    @db.Timestamp(6)
  Is_Active            Boolean      @default(true)
  Audit_Logs           Audit_Logs[]
}

model Audit_Logs {
  Audit_Log_ID     Int           @id @default(autoincrement())
  User_ID          Int
  Type_ID          Int
  Action_ID        Int
  Changes          Json?         @db.Json
  Created_Datetime DateTime      @default(now()) @db.Timestamp(6)
  Audit_Actions    Audit_Actions @relation(fields: [Action_ID], references: [Audit_Log_Actions_ID], onDelete: NoAction, onUpdate: NoAction)
  Audit_Type       Audit_Type    @relation(fields: [Type_ID], references: [Audit_Log_Type_ID], onDelete: NoAction, onUpdate: NoAction)
  Users            Users         @relation(fields: [User_ID], references: [User_ID], onDelete: NoAction, onUpdate: NoAction)
}

model Audit_Type {
  Audit_Log_Type_ID Int          @id(map: "Audit_Log_Type_pkey") @default(autoincrement())
  Name              String       @db.VarChar(255)
  Description       String?      @db.VarChar(255)
  Created_Datetime  DateTime     @default(now()) @db.Timestamp(6)
  Updated_Datetime  DateTime?    @db.Timestamp(6)
  Is_Active         Boolean?     @default(true)
  Audit_Logs        Audit_Logs[]
}

model Stock_Alerts {
  Stock_Alerts_ID  Int       @id @default(autoincrement())
  Item_ID          Int
  Threshold        Int
  Is_Active        Boolean   @default(false)
  Created_Datetime DateTime  @default(now()) @db.Timestamp(6)
  Updated_Datetime DateTime? @db.Timestamp(6)
  Items            Items     @relation(fields: [Item_ID], references: [Item_ID], onDelete: NoAction, onUpdate: NoAction)
}

model Location_Contact {
  Location_Contact_ID Int        @id @default(autoincrement())
  Location_ID         Int?
  Contact_ID          Int?
  Created_Datetime    DateTime   @default(now()) @db.Timestamp(6)
  Updated_Datetime    DateTime?  @db.Timestamp(6)
  Contacts            Contacts?  @relation(fields: [Contact_ID], references: [Contact_ID], onDelete: NoAction, onUpdate: NoAction)
  Locations           Locations? @relation(fields: [Location_ID], references: [Location_ID], onDelete: NoAction, onUpdate: NoAction)
}

model Location_Type {
  Location_Type_ID Int         @id @default(autoincrement())
  Description      String      @db.VarChar(225)
  Created_Datetime DateTime    @default(now()) @db.Timestamp(6)
  Updated_Datetime DateTime?   @db.Timestamp(6)
  Locations        Locations[]
}
